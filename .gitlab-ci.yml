stages:
  - test
  - deploy

variables:
  APP_NAME: create-nodejs-app
  APP_PROCESS_TYPE: web
  DOCKER_IMAGE_NAME: leonardosarmentocastro/$APP_NAME:$CI_COMMIT_SHORT_SHA
  HEROKU_DOCKER_IMAGE_NAME: registry.heroku.com/$APP_NAME/$APP_PROCESS_TYPE
  NODE_ENV: test
  MONGODB_DATABASE_NAME: db-ci
  MONGODB_HOST: 0.0.0.0

test:
  stage: test
  image: node:lts # Run against latest node stable release.
  services:
    - mongo:latest # Start mongodb for functional tests.
  script:
    - npm ci # Clean/faster install of dependencies.
    - npm run test:ci # Run unit/functional tests using mongodb from "services".
    - npx codecov --file=./coverage/lcov.info # Collect code coverage: https://codecov.io

deploy:
  stage: deploy
  image: docker:dind
  script:
    # Download heroku toolbelt.
    - wget -qO- https://toolbelt.heroku.com/install.sh | sh

    # Log into dockerhub/heroku registries to later push docker images to them.
    - echo "$SECRET_DOCKER_PASSWORD" | docker login -u "$SECRET_DOCKER_USERNAME" --password-stdin
    - echo "$SECRET_HEROKU_AUTHORIZATION_TOKEN" | docker login -u "_" --password-stdin registry.heroku.com

    # Build docker image and tag it following heroku convention.
    - docker build -t $DOCKER_IMAGE_NAME .
    - docker tag $DOCKER_IMAGE_NAME $HEROKU_DOCKER_IMAGE_NAME

    # Push docker images to dockerhub/heroku registries.
    - docker push $DOCKER_IMAGE_NAME
    - docker push $HEROKU_DOCKER_IMAGE_NAME

    # Release (deploy) the newly builded docker image.
    - heroku container:release $APP_PROCESS_TYPE --app $APP_NAME
  only:
    - adding_database
